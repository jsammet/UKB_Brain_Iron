library(dplyr)
library(psych)
library(nFactors)
library(base)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
full_file <- read.csv("../../UKB_brain_mri_raw/ukb51917_T2_MRIvar_RBC-IDP_all.tab", sep="\t")
# get rid of unwanted columns for better overview
reduce_file <- full_file %>% select('f.eid','f.31.0.0', "f.21003.2.0",
"f.30050.2.0",	##	Mean corpuscular haemoglobin
"f.30060.2.0",	##	Mean corpuscular haemoglobin concentration
"f.30040.2.0",	##	Mean corpuscular volume
"f.30030.2.0",	##	Haematocrit percentage
"f.30020.2.0",	##	Haemoglobin concentration
"f.30010.2.0",	##	Red blood cell (erythrocyte) count
"f.30070.2.0",	##	Red blood cell (erythrocyte) distribution widt
matches("^f.258.*.2.0$"),	##	Volume of grey matter areas
matches("^f.259.*.2.0$"),	##	Volume of grey matter areas
matches("^f.257.*.2.0$"), ##	Volume of grey matter areas
matches("^f.2503.*.2.0$"), ##	Median T2star areas
matches("^f.2502.*.2.0$"), ##	Median T2star areas
matches("^f.42018.*.2.0$"),
"f.25756.2.0",	##	Scanner lateral (X) brain position	T1 structural brain MRI
"f.25758.2.0",	##	Scanner longitudinal (Z) brain position	T1 structural brain MRI
"f.25759.2.0",	##	Scanner table position	T1 structural brain MRI
"f.25757.2.0")	##	Scanner transverse (Y) brain position	## Date of all cause dementia report
file_noNA <- na.omit(reduce_file)
# Renaming for understandability
file_fin <- rename(file_noNA,'ID' = 'f.eid', 'sex'='f.31.0.0','age'="f.21003.2.0","mean_corp_hb"="f.30050.2.0", "mean_corp_hb_concent"= "f.30060.2.0",
"mean_corp_vol" = "f.30040.2.0", "Hct_percent"="f.30030.2.0",	"hb_concent"="f.30020.2.0", "erythrocyte_cnt"="f.30010.2.0",
"erythrocyte_dist_wdt"="f.30070.2.0",
"T2star_acc_L" = "f.25038.2.0", "T2star_acc_R" = "f.25039.2.0", "T2star_amyg_L" = "f.25036.2.0",
"T2star_amyg_R" = "f.25037.2.0", "T2star_caud_L" = "f.25028.2.0", "T2star_caud_R" = "f.25029.2.0",	##	Median T2star in caudate (right)
"T2star_hipp_L" = "f.25034.2.0",	"T2star_hipp_R" = "f.25035.2.0","T2star_palli_L" = "f.25032.2.0",	##	Median T2star in pallidum (left)
"T2star_palli_R" = "f.25033.2.0", "T2star_put_L" = "f.25030.2.0",	##	Median T2star in putamen (left)
"T2star_put_R" = "f.25031.2.0", "T2star_tha_L" = "f.25026.2.0", "T2star_tha_R" = "f.25027.2.0",
"scan_lat"="f.25756.2.0","scan_long"="f.25758.2.0","scan_tab"="f.25759.2.0","scan_trans"="f.25757.2.0")
file_cor <- file_fin %>% select('sex','age',"mean_corp_hb", "mean_corp_hb_concent","mean_corp_vol", "Hct_percent","hb_concent", "erythrocyte_cnt",
"erythrocyte_dist_wdt","T2star_acc_L", "T2star_acc_R", "T2star_amyg_L","T2star_amyg_R", "T2star_caud_L", "T2star_caud_R",
"T2star_hipp_L",	"T2star_hipp_R","T2star_palli_L","T2star_palli_R", "T2star_put_L","T2star_put_R", "T2star_tha_L", "T2star_tha_R")
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,pval=c(0.05),cuts=c(.001,.01),cex.axis=0.5,stars=TRUE)
#Associations Heatmap: self correlation
COR_comp <- cor(file_cor,file_cor, use="pairwise", method="spearman")
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,pval=c(0.05),
cuts=c(.001,.01),cex.axis=0.5,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,,cex.axis=0.5,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,,cex.axis=1.5,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,,cex.axis=1,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,
cex.axis=1,number.cex=1,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,
cex.axis=1,cex=1,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=100,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,
cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,n=51,main="Blood-T2* correlation",zlim=c(-1,1), show.legend=TRUE, diag=FALSE, labels=NULL,n.legend=10,keep.par=TRUE,select=NULL,
cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,keep.par=TRUE,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(file_cor,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,keep.par=TRUE,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
rs <- cor.test(file_cor)
rs <- cor.test(tmp[,file_cor])
rs <- cor.test(as.numeric(,file_cor)
rs <- cor.test(as.numeric(file_cor))
rs <- cor.test(as.numeric(file_cor))
rs <- cor.test(df <- data.frame(matrix(unlist(file_cor), nrow=length(file_cor), byrow=TRUE)))
rs <- cor.test(data.frame(matrix(unlist(file_cor), nrow=length(file_cor), byrow=TRUE)))
rs <- cor.test(as.numeric(data.frame(matrix(unlist(file_cor), nrow=length(file_cor), byrow=TRUE))))
df_cor <- as.numeric(data.frame(matrix(unlist(file_cor), nrow=length(file_cor), byrow=TRUE)))
df_cor <- data.frame(matrix(unlist(file_cor), nrow=length(file_cor), byrow=TRUE))
View(df)
View(df)
type(file_cor)
class(file_cor)
View(file_cor)
file_noNA <- na.omit(reduce_file)
# Renaming for understandability
file_fin <- rename(file_noNA,'ID' = 'f.eid', 'sex'='f.31.0.0','age'="f.21003.2.0","mean_corp_hb"="f.30050.2.0", "mean_corp_hb_concent"= "f.30060.2.0",
"mean_corp_vol" = "f.30040.2.0", "Hct_percent"="f.30030.2.0",	"hb_concent"="f.30020.2.0", "erythrocyte_cnt"="f.30010.2.0",
"erythrocyte_dist_wdt"="f.30070.2.0",
"T2star_acc_L" = "f.25038.2.0", "T2star_acc_R" = "f.25039.2.0", "T2star_amyg_L" = "f.25036.2.0",
"T2star_amyg_R" = "f.25037.2.0", "T2star_caud_L" = "f.25028.2.0", "T2star_caud_R" = "f.25029.2.0",	##	Median T2star in caudate (right)
"T2star_hipp_L" = "f.25034.2.0",	"T2star_hipp_R" = "f.25035.2.0","T2star_palli_L" = "f.25032.2.0",	##	Median T2star in pallidum (left)
"T2star_palli_R" = "f.25033.2.0", "T2star_put_L" = "f.25030.2.0",	##	Median T2star in putamen (left)
"T2star_put_R" = "f.25031.2.0", "T2star_tha_L" = "f.25026.2.0", "T2star_tha_R" = "f.25027.2.0",
"scan_lat"="f.25756.2.0","scan_long"="f.25758.2.0","scan_tab"="f.25759.2.0","scan_trans"="f.25757.2.0")
file_cor <- file_fin %>% select('sex','age',"mean_corp_hb", "mean_corp_hb_concent","mean_corp_vol", "Hct_percent","hb_concent", "erythrocyte_cnt",
"erythrocyte_dist_wdt","T2star_acc_L", "T2star_acc_R", "T2star_amyg_L","T2star_amyg_R", "T2star_caud_L", "T2star_caud_R",
"T2star_hipp_L",	"T2star_hipp_R","T2star_palli_L","T2star_palli_R", "T2star_put_L","T2star_put_R", "T2star_tha_L", "T2star_tha_R")
View(file_cor)
View(file_cor)
View(COR_comp)
View(COR_comp)
rs <- cor.test(file_cor)
str(file_cor)
file_noNA <- reduce_file[complete.cases(reduce_file), ]
# Renaming for understandability
file_fin <- rename(file_noNA,'ID' = 'f.eid', 'sex'='f.31.0.0','age'="f.21003.2.0","mean_corp_hb"="f.30050.2.0", "mean_corp_hb_concent"= "f.30060.2.0",
"mean_corp_vol" = "f.30040.2.0", "Hct_percent"="f.30030.2.0",	"hb_concent"="f.30020.2.0", "erythrocyte_cnt"="f.30010.2.0",
"erythrocyte_dist_wdt"="f.30070.2.0",
"T2star_acc_L" = "f.25038.2.0", "T2star_acc_R" = "f.25039.2.0", "T2star_amyg_L" = "f.25036.2.0",
"T2star_amyg_R" = "f.25037.2.0", "T2star_caud_L" = "f.25028.2.0", "T2star_caud_R" = "f.25029.2.0",	##	Median T2star in caudate (right)
"T2star_hipp_L" = "f.25034.2.0",	"T2star_hipp_R" = "f.25035.2.0","T2star_palli_L" = "f.25032.2.0",	##	Median T2star in pallidum (left)
"T2star_palli_R" = "f.25033.2.0", "T2star_put_L" = "f.25030.2.0",	##	Median T2star in putamen (left)
"T2star_put_R" = "f.25031.2.0", "T2star_tha_L" = "f.25026.2.0", "T2star_tha_R" = "f.25027.2.0",
"scan_lat"="f.25756.2.0","scan_long"="f.25758.2.0","scan_tab"="f.25759.2.0","scan_trans"="f.25757.2.0")
file_cor <- file_fin %>% select('sex','age',"mean_corp_hb", "mean_corp_hb_concent","mean_corp_vol", "Hct_percent","hb_concent", "erythrocyte_cnt",
"erythrocyte_dist_wdt","T2star_acc_L", "T2star_acc_R", "T2star_amyg_L","T2star_amyg_R", "T2star_caud_L", "T2star_caud_R",
"T2star_hipp_L",	"T2star_hipp_R","T2star_palli_L","T2star_palli_R", "T2star_put_L","T2star_put_R", "T2star_tha_L", "T2star_tha_R")
rs <- cor.test(file_cor)
rs <- cor.test(as.numeric(file_cor))
str(file_cor)
file_cor$sex <- as.numeric(file_cor$sex)
file_cor$age <- as.numeric(file_cor$age)
str(file-cor)
str(file_cor)
rs <- cor.test(file_cor)
str(file_cor)
View(COR_comp)
View(df)
View(file_cor)
str(file_cor)
rs <- cor.test(COR_comp)
corr.test(file_cor)$p
rs <- corr.test(COR_comp)
CorrPlot <- cor.plot(rs$r,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,keep.par=TRUE,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(rs$r,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,keep.par=TRUE,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,keep.par=TRUE,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
rs <- corr.test(COR_comp, method="Spearman")
rs <- corr.test(COR_comp, method="spearman")
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(rs$r,numbers=TRUE,pval=rs$p,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,cuts=c(.001,.01),colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,cuts=c(.001,.01,.05),pval,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,cuts=c(.001,.01,.05),pval=c(.001,.01,.05),colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
#Associations Heatmap: self correlation
COR_comp <- cor(file_cor,file_cor, use="pairwise", method="pearson")
#Associations Heatmap: self correlation
COR_comp <- cor(file_cor,file_cor, use="pairwise", method="parson")
CorrPlot <- cor.plot(COR_comp,numbers=TRUEstars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),diag=FALSE,n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,select=NULL,cex.axis=1,cex=0.75,stars=TRUE)
CorrPlot <- cor.plot(COR_comp,numbers=TRUE,colors=TRUE,main="Blood-T2* correlation",zlim=c(-1,1),n.legend=10,cex.axis=1,cex=0.75,stars=TRUE)
results <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test__medcam_hb_concent_3class_60_0.0001_5e-07.csv")
plot(results$Prediction,results$True_Label, xlim=range(20:40), ylim=range(20:40))
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity <- Sensitivity / (max_+1)
Specificity <- Specificity / (max_+1)
Sensitivity
Specificity
class_sensitivity <- array(max_)
class_specificity <- array(max_)
label_list <- seq(min_:max_)
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
class_sensitivity[i+1] <- TP_ / (TP_ + FN_)
class_specificity[i+1] <- TN_ / (TN_ + FP_)
}
barplot(height=class_sensitivity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Sensititvity",main="Sensitivity per class")
barplot(height=class_specificity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Specificity",main="Specificity per class")
results <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test_NT_IntGrad_hb_3class_60_0.0001_5e-07_hb_concent.csv")
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity <- Sensitivity / (max_+1)
Specificity <- Specificity / (max_+1)
Sensitivity
Specificity
# Accuracy per class
class_sensitivity <- array(max_)
class_specificity <- array(max_)
label_list <- seq(min_:max_)
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
class_sensitivity[i+1] <- TP_ / (TP_ + FN_)
class_specificity[i+1] <- TN_ / (TN_ + FP_)
}
barplot(height=class_sensitivity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Sensititvity",main="Sensitivity per class")
barplot(height=class_specificity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Specificity",main="Specificity per class")
/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test__medcam_hb_concent_3class_60_0.0001_5e-07.csv
results <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test__medcam_hb_concent_3class_60_0.0001_5e-07.csv")
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity <- Sensitivity / (max_+1)
Specificity <- Specificity / (max_+1)
Sensitivity
Specificity
# Accuracy per class
class_sensitivity <- array(max_)
class_specificity <- array(max_)
label_list <- seq(min_:max_)
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
class_sensitivity[i+1] <- TP_ / (TP_ + FN_)
class_specificity[i+1] <- TN_ / (TN_ + FP_)
}
barplot(height=class_sensitivity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Sensititvity",main="Sensitivity per class")
barplot(height=class_specificity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Specificity",main="Specificity per class")
# Plot loss
loss <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/train_valid_medcam_100_3class__0.0001hb_concent.csv")
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation")
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
legend(x = "topright",   # Position
inset = 0.1,
legend = c("train loss", "valid loss"),  # Legend texts
lty = c(1, 1),           # Line types
col = c(2, 3),           # Line colors
lwd = 2)                 # Line width
results <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test__medcam_hb_concent_3class_100_0.0001_5e-07.csv")
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity <- Sensitivity / (max_+1)
Specificity <- Specificity / (max_+1)
Sensitivity
Specificity
# Accuracy per class
class_sensitivity <- array(max_)
class_specificity <- array(max_)
label_list <- seq(min_:max_)
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
class_sensitivity[i+1] <- TP_ / (TP_ + FN_)
class_specificity[i+1] <- TN_ / (TN_ + FP_)
}
barplot(height=class_sensitivity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Sensititvity",main="Sensitivity per class")
barplot(height=class_specificity, names=label_list, ylim=c(0,1), xlab="Classes", ylab="Specificity",main="Specificity per class")
# confusion matrix
View(loss)
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0:1.2))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.4:1.8))
# Plot loss
loss <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/train_valid_medcam_100_3class__0.0001hb_concent.csv")
View(loss)
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.4:1.8))
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.55:1.4))
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.5))
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.4))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.4))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.3))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.41))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.41))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=range(0.5:1.5))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=v(0.5,1.5))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=c(0.5,1.5))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=range(0:100),ylim=c(0.5,1.2))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=c(0c100),ylim=c(0.5,1.2))
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=c(0,100),ylim=c(0.5,1.2))
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
legend(x = "topright",   # Position
inset = 0.1,
legend = c("train loss", "valid loss"),  # Legend texts
lty = c(1, 1),           # Line types
col = c(2, 3),           # Line colors
lwd = 2)                 # Line width
View(loss)
plot(loss$ID,loss$train_loss,type = "l", lty = 1,col="red",xlab="epochs",ylab="Cross_entropy Loss",main="3 class: Loss during training & validation",xlim=c(0,100),ylim=c(0.5,1.15))
lines(loss$ID,loss$valid,type = "l", lty = 1,col="green")
legend(x = "topright",   # Position
inset = 0.1,
legend = c("train loss", "valid loss"),  # Legend texts
lty = c(1, 1),           # Line types
col = c(2, 3),           # Line colors
lwd = 2)                 # Line width
library(dplyr)
library(psych)
library(nFactors)
library(base)
library('caret')
library(ggplot2)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
swi_joint <- read.csv(swi_joint,'swi_brain_vol_info_additional.csv')
swi_joint <- read.csv('swi_brain_vol_info_additional.csv')
View(swi_joint)
### Additional file
full_file <- read.csv("../../UKB_brain_mri_raw/ukb51917_T2_MRIvar_filt_v3.tab", sep="\t")
full_file <- rename(full_file,'ID' = 'f.eid')
# CORRECTION FOR SCAN MEASURES
reduce_file <- full_file %>% select("ID",
"f.25756.2.0",	##	Scanner lateral (X) brain position	T1 structural brain MRI
"f.25756.2.0",	##	Scanner longitudinal (Z) brain position	T1 structural brain MRI
"f.25759.2.0",	##	Scanner table position	T1 structural brain MRI
"f.25757.2.0",	##	Scanner transverse (Y) brain position
"f.25738.2.0",  ##  T1 SWI image difference
"f.25000.2.0",  ##  head volumne
"f.4990.2.0",   ##  fluid intelligence
## negative controls
"f.1747.2.0",#,  ## hair colour
"f.54.2.0") ## assessment centre
#"f.796.2.0")   ## distance to work
file_fin <- rename(reduce_file, 'Scan_lat_X' = "f.25756.2.0", 'Scan_long_Z' = "f.25756.2.0", 'Scan_table_pos' = "f.25759.2.0",
'Scan_trans_Y' = "f.25757.2.0", 'T1_SWI_diff' = "f.25738.2.0", "fluid_int"="f.4990.2.0",
'head_vol' = "f.25000.2.0", 'hair_col' = "f.1747.2.0", 'assess_centre'='f.54.2.0')#, 'dis_to_work' = "f.769.2.0")
View(file_fin)
View(file_fin)
View(full_file)
View(full_file)
# CORRECTION FOR SCAN MEASURES
reduce_file <- full_file %>% select("ID",
"f.25756.2.0",	##	Scanner lateral (X) brain position	T1 structural brain MRI
"f.25758.2.0",	##	Scanner longitudinal (Z) brain position	T1 structural brain MRI
"f.25759.2.0",	##	Scanner table position	T1 structural brain MRI
"f.25757.2.0",	##	Scanner transverse (Y) brain position
"f.25738.2.0",  ##  T1 SWI image difference
"f.25000.2.0",  ##  head volumne
"f.4990.2.0",   ##  fluid intelligence
## negative controls
"f.1747.2.0",#,  ## hair colour
"f.54.2.0") ## assessment centre
#"f.796.2.0")   ## distance to work
file_fin <- rename(reduce_file, 'Scan_lat_X' = "f.25756.2.0", 'Scan_long_Z' = "f.25758.2.0", 'Scan_table_pos' = "f.25759.2.0",
'Scan_trans_Y' = "f.25757.2.0", 'T1_SWI_diff' = "f.25738.2.0", "fluid_int"="f.4990.2.0",
'head_vol' = "f.25000.2.0", 'hair_col' = "f.1747.2.0", 'assess_centre'='f.54.2.0')#, 'dis_to_work' = "f.769.2.0")
swi_file <- read.csv('../swi_brain_vol_info.csv')
swi_joint <- merge(x = swi_file, y = file_fin, by = "ID",x.all=TRUE)
swi_joint <- subset(swi_joint, select = -c(X.1))
View(swi_joint)
write.csv(swi_joint,'swi_brain_vol_info_additional.csv')
full_file <- read.csv("final_brain_vol_info.csv")
cuts <- cut(h$breaks, c(-Inf,13.63,14.7,Inf))
# plot the histogram with the colours
plot(h, col=cuts)
h <- hist(full_file$hb_concent, breaks=60)
cuts <- cut(h$breaks, c(-Inf,13.63,14.7,Inf))
# plot the histogram with the colours
plot(h, col=cuts)
# plot the histogram with the colours
plot(h, col=c("green","red","blue")[cuts])
h <- hist(full_file$mean_corp_hb, breaks=60)
cuts <- cut(h$breaks, c(-Inf,30.34,31.52,Inf))
# plot the histogram with the colours
plot(h, col=c("green","red","blue")[cuts])
h <- hist(full_file$mean_corp_hb, breaks=100)
cuts <- cut(h$breaks, c(-Inf,30.34,31.52,Inf))
# plot the histogram with the colours
plot(h, col=c("green","red","blue")[cuts])
h <- hist(full_file$hb_concent, breaks=100)
cuts <- cut(h$breaks, c(-Inf,30.34,31.52,Inf))
cuts <- cut(h$breaks, c(-Inf,13.63,14.7,Inf))
# plot the histogram with the colours
plot(h, col=c("green","red","blue")[cuts])
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, alpha=0.4)
}}
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, alpha=0.25)
}}
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, col=alpha(0.25))
}}
View(file_cor)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, col=alpha(file_cor,0.25))
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, col=alpha(file_cor,0.25))
}}
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = "blue",main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_, col=alpha(file_cor$sex,0.25))
}}
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = col.alpha( "blue" , alpha = 0.2 ),main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_)
}}
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col = col=rgb(red=0.0, green=0.0, blue=1.0, alpha=0.2),main = sprintf("%s & hb_concent",names_),
# Plot the chart.
plot(y,x,col=rgb(red=0.0, green=0.0, blue=1.0, alpha=0.2),main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_)
# DO regression over all areas
for (names_ in colnames(file_cor)) {
print(names_)
if (startsWith(names_,"T2star")) {
x <- file_cor$hb_concent
y <- file_cor[ , names_]
relation <- lm(y~x)
# Plot the chart.
plot(y,x,col=rgb(red=0.0, green=0.0, blue=1.0, alpha=0.2),main = sprintf("%s & hb_concent",names_),
abline(lm(x~y)),xlab = "hb_concent",ylab = names_)
}}
# Plot the chart.
plot(y,x,col=rgb(red=0.0, green=0.0, blue=1.0, alpha=0.2),main = sprintf("%s & T2star_hipp_L",names_),
abline(lm(x~y)),xlab = names_,ylab = "T2star_hipp_L")
# DO regression over all blood measures
for (names_ in colnames(file_cor)) {
print(names_)
if (!startsWith(names_,"T2star")) {
y <- file_cor$T2star_hipp_L
x <- file_cor[ , names_]
relation <- lm(y~x+file_cor$age+file_cor$sex)
# Plot the chart.
plot(y,x,col=rgb(red=0.0, green=0.0, blue=1.0, alpha=0.2),main = sprintf("%s & T2star_hipp_L",names_),
abline(lm(x~y)),xlab = names_,ylab = "T2star_hipp_L")
}}
