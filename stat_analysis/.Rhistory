library(dplyr)
library(psych)
library(nFactors)
library(base)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
results <- read.csv("../results/test_10class_100_0.0001_5e-07_mean_corp_hb.csv")
View(results)
results <- read.csv("../results/test_3classes_30_0.0001_5e-07_mean_corp_hb.csv.csv")
View(results)
results <- read.csv("../results/test_3classes_30_0.0001_5e-07_mean_corp_hb.csv.csv")
results <- read.csv("../results/test_3classes_30_0.0001_5e-07_mean_corp_hb.csv")
View(results)
min(results$True_Label)
max(results$True_Label)
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == str(i) & results$True_Label == str(i)) ,])
FP_ <- nrow(results[ which(results$Prediction == str(i) & results$True_Label != str(i)) ,])
FN_ <- nrow(results[ which(results$Prediction != str(i) & results$True_Label == str(i)) ,])
TN_ <- nrow(results[ which(results$Prediction != str(i) & results$True_Label != str(i)) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == stri & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == str(i) & results$True_Label != str(i)) ,])
FN_ <- nrow(results[ which(results$Prediction != str(i) & results$True_Label == str(i)) ,])
TN_ <- nrow(results[ which(results$Prediction != str(i) & results$True_Label != str(i)) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
for (i in min_:max_) {
i
i+0.9
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
for (i in min_:max_) {
i
i+0.9
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity / max_+1
Sensitivity / (max_+1)
Specificity / (max_+1)
results <- read.csv("../results/test_10class_100_0.0001_5e-07_mean_corp_hb.csv")
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
library("plyr")                                     # Load plyr package
library("dplyr")                                    # Load dplyr package
library("readr")                                    # Load readr package
chr_insert <- function(x, pos, insert) {       # Create own function for character insert
gsub(paste0("^(.{", pos, "})(.*)$"),
paste0("\\1", insert, "\\2"),
x)
}
correct_age <- function(df_age) {
df_age <- df_age %>% mutate(AGE = coalesce(AGE.x,AGE.y))
df_age <- select(df_age, -c("AGE.x", "AGE.y"))
}
correct_gender <- function(df_gen) {
df_gen <- df_gen %>% mutate(GENDER = coalesce(GENDER.x,GENDER.y))
df_gen <- select(df_gen, -c("GENDER.x", "GENDER.y"))
}
correct_group <- function(df_grp) {
df_grp <- df_grp %>% mutate(GROUP = coalesce(GROUP.x,GROUP.y))
df_grp <- select(df_grp, -c("GROUP.x", "GROUP.y"))
}
correct_centre <- function(df_cen) {
df_cen <- df_cen %>% mutate(centre = coalesce(centre.x,centre.y))
df_cen  <- select(df_cen, -c("centre.x", "centre.y"))
}
# Read the 4 sources for Info
df_stats <- read.csv("/home/jsammet/mnt_cluster/NBS/complete_info_backup.csv",stringsAsFactors=FALSE)
df_check <- read.csv("/home/jsammet/mnt_cluster/NBS/checklist_all_sites.csv",stringsAsFactors=FALSE)
df_check$NAME <- chr_insert(x = df_check$NAME, pos = 0, insert = "0")
df_check$NAME <- chr_insert(x = df_check$NAME, pos = 2, insert = "-")
# Read the 4 sources for Info
df_stats <- read.csv("/home/jsammet/mnt_bas/results/NBS/complete_info_backup.csv",stringsAsFactors=FALSE)
df_check <- read.csv("/home/jsammet/mnt_bas/results/NBS/checklist_all_sites.csv",stringsAsFactors=FALSE)
df_check$NAME <- chr_insert(x = df_check$NAME, pos = 0, insert = "0")
df_check$NAME <- chr_insert(x = df_check$NAME, pos = 2, insert = "-")
df_ecrf <- read.csv("/home/jsammet/mnt_bas/results/NBS/ecrf_header.csv",stringsAsFactors=FALSE)
df_ecrf$NAME <- chr_insert(x = df_ecrf$NAME, pos = 0, insert = "0")
df_ecrf$NAME <- chr_insert(x = df_ecrf$NAME, pos = 2, insert = "-")
df_gem <- read.csv("/home/jsammet/mnt_bas/results/NBS/gem_april_download.csv",stringsAsFactors=FALSE)
df_gem$NAME <- chr_insert(x = df_gem$NAME, pos = 0, insert = "0")
df_gem$NAME <- chr_insert(x = df_gem$NAME, pos = 2, insert = "-")
df_dem <- read.csv("/home/jsammet/mnt_bas/results/NBS/femNAT_Demographics.csv",stringsAsFactors=FALSE)
df_dem$partno <- sprintf("%04d",df_dem$partno)
df_dem$NAME <- paste(df_dem$centre, df_dem$partno, sep="") #combine centre and participant number into one column
df_dem$NAME <- chr_insert(x = df_dem$NAME, pos = 0, insert = "0")
df_dem$NAME <- chr_insert(x = df_dem$NAME, pos = 2, insert = "-")
df_dem <- na.omit(df_dem)
# Read list of existing participants
df_list <- read.csv("/home/jsammet/mnt_bas/results/NBS/list_all_sites.csv",stringsAsFactors=FALSE)
df_full = merge(x=df_stats,y=df_list,by="NAME",all.y=TRUE)
df_full = merge(x=df_check,y=df_full,by=c("NAME"),all.y=TRUE)
df_full <- correct_age(df_full)
df_full = merge(x=df_ecrf,y=df_full,by=c("NAME"),all.y=TRUE)
df_full <- correct_age(correct_centre(correct_gender(correct_group(df_full))))
df_full = merge(x=df_dem,y=df_full,by=c("NAME"),all.y=TRUE)
df_full <- correct_age(correct_centre(correct_gender(correct_group(df_full))))
df_full <- subset(df_full, select = c("NAME","GROUP","GENDER","AGE","centre","GRP","GENDER_CHAR"))
# remove duplicates
df <- df_full[!duplicated(df_full$NAME), ]
df <- subset(df, select = c(-GRP,-GENDER_CHAR))
# change representative values
df["GENDER"][df["GENDER"] == '2'] <- -2 #MALE
df["GENDER"][df["GENDER"] == '1'] <- 1 #FEMALE
df["GROUP"][df["GROUP"] == 2] <- 2 #CONTROL
df["GROUP"][df["GROUP"] == 1] <- 1 #CASE
# Display number of genders and case/control
table(df$GENDER, useNA = 'always')
table(df$GROUP, useNA = 'always')
View(df)
# change representative values
df["GENDER"][df["GENDER"] == '-2'] <- 2 #MALE
# Display number of genders and case/control
table(df$GENDER, useNA = 'always')
# create dataframe without NA rows
df_noNA <- na.omit(df)
write.csv(df,"/home/jsammet/mnt_bas/results/GraphVar/complete_info_12.csv")
write.csv(df,"/home/jsammet/mnt_bas/results/GraphVar/complete_info_12.csv", sep = ";")
write.csv(df,file="/home/jsammet/mnt_bas/results/GraphVar/complete_info_12.csv", sep = ";")
write.csv(df,file="/home/jsammet/mnt_bas/results/GraphVar/complete_info_12.csv",sep = ";",dec=".")
write.csv2(df,file="/home/jsammet/mnt_bas/results/GraphVar/complete_info_12.csv")
View(df)
library(dplyr)
library(psych)
library(nFactors)
library(base)
full_file <- read.csv("final_brain_vol_info.csv")
library(base)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
full_file <- read.csv("final_brain_vol_info.csv")
View(full_file)
results <- read.csv("/home/jsammet/mnt_ox/UKB_Brain_Iron/results/test_moreClasses_3class_25_0.0001_5e-07_mean_corp_hb.csv")
min_ <- min(results$True_Label)
max_ <- max(results$True_Label)
Sensitivity <- 0
Specificity <- 0
for (i in min_:max_) {
i
TP_ <- nrow(results[ which(results$Prediction == i & results$True_Label == i) ,])
FP_ <- nrow(results[ which(results$Prediction == i & results$True_Label != i) ,])
FN_ <- nrow(results[ which(results$Prediction != i & results$True_Label == i) ,])
TN_ <- nrow(results[ which(results$Prediction != i & results$True_Label != i) ,])
Sensitivity <- Sensitivity + TP_ / (TP_ + FN_)
Specificity <- Specificity + TN_ / (TN_ + FP_)
}
Sensitivity <- Sensitivity / (max_+1)
Specificity <- Specificity / (max_+1)
Sensitivity
Specificity
View(results)
